module.exports = function (path, log) {
	var http = require('http');
	var path_module = require('path');
	var fs = require('fs');
    var module = {};

    //settings
    var module_path = path_module.resolve('./node_modules');
    var beacons = loadModules(module_path, 'beacon-', 'mac');
    var webserver = http.createServer(handleRequest);
    var callback = null;
    module.name = "webserver";
	module.port = process.env.PORT || 8000;

	//start function
    module.start = function(cb) {
    	callback = cb;
    	webserver.listen(module.port, function() {
    		log(module.name, "Webserver trigger listening on port " + module.port);
    	});
    };


    module.stop = function(callback) {
    	webserver.close();
    };




	
	function handleRequest(req, res) {
		var url = req.url;
		log('webserver', "[" + req.method + "] " + url);

		if (url.match(/\/favicon.ico.*/gi)) {
			res.end('', 404);
		}

		//match mac address
		else if (url.match(/\/trigger\/((?:[\dA-Fa-fX]{2}[\:\-]){5}(?:[\dA-Fa-fX]{2}))/gi)) {
			var matches = /((?:[\dA-Fa-fX]{2}[\:\-]){5}(?:[\dA-Fa-fX]{2}))/gi.exec(url);
	        if (matches != null && matches.length > 0) {
	            if (callback != null) {
	            	callback(module.name, matches[1].replace(/\-/g, ":"));
	        	}
	        }

	        res.end('<html><head></head><body><script type="text/javascript">window.location=window.location.href.substring(0, window.location.href.indexOf(\'/trigger\'));</script></body></html>');
		}
		
		
		//return main page
		else {
			res.writeHead(200, {
				'Content-Type': 'text/html',
				'Cache-Control': 'no-cache'
			});
			
			var page = fs.readFileSync(path_module.dirname(path) + "/index.html", "utf8");
			var table = "<table><tr><td>MAC Address</td><td>Beacon Name</td></td>";
			for (beacon in beacons) {
				beacon = beacons[beacon];

				table += '<tr><td><a href="./trigger/' + beacon.mac.replace(/\:/g, "-") + '">' + beacon.mac + "</a></td><td>" + beacon.name + "</td></tr>";
			}

			table += "</table>";


			page = page.replace("<!--{beacons}-->", table);
			//return page
			res.end(page);
		}
	}

	function loadModules(base, prefix, index) {
		var ret = {};

		//check base dir
		if (fs.lstatSync(base).isDirectory() == true) {
			var dirs = fs.readdirSync(base);
			for (subdir in dirs) {
				if (dirs[subdir].substring(0,prefix.length).indexOf(prefix) !== -1) {
					//load modules from sub dirs with prefix
					var path = path_module.join(base, dirs[subdir]);
					if (fs.lstatSync(path).isDirectory() == true) {
						var files = fs.readdirSync(path);

						for (file in files) {
							file = files[file];

							//only loading .js files
							if (file.indexOf('.js', file.length - 3) !== -1) {
								var full = path_module.join(path, file);
								var module = require(full)(full, log);
								if (module != null) { 
									ret[module[index].toLowerCase()] = module;
			}}}}}}}
		return ret;
	}



    return module;
}

